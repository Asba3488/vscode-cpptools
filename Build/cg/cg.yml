parameters:
- name: configs   # list of configurations to build
  type: object
  default:
    - windows-x86
    - windows-x64
    - windows-arm64
    - linux-x64
    - linux-arm32
    - linux-arm64
    - macos-x64
    - macos-arm64
    - alpine-x64
    - alpine-arm64
- name: preRelease
  displayName: Pre-release
  type: boolean
  default: false
  values:
    - true
    - false
- name: correctBinaryVersion
  displayName: Binary version in CMakeLists.txt is correct
  type: string
  default: no
  values:
    - yes
    - no
- name: currentVersion
  displayName: Current version
  type: string
  default: '1.xx.x'
- name: releaseVersion
  displayName: Release version
  type: string
  default: '1.xx.x'
- name: githubBranch
  displayName: GitHub branch override (if different from release/insiders)
  type: string
  default: ''

stages:
- stage: verify
  jobs:
  - job: verify
    pool:
      vmImage: 'windows-latest'
    steps:
    - checkout: none
    - powershell: |
        Write-Host "correctBinaryVersion = ${{ parameters.correctBinaryVersion }}"
        Write-Host "##vso[task.logissue type=error]correctBinaryVersion must be set to 'yes'."
        exit 1
      displayName: self-attestation
      condition: eq('${{ parameters.correctBinaryVersion }}', 'no')

- stage: build
  jobs:
  - job: build
    pool:
      vmImage: 'windows-latest'
    steps:
    - checkout: none
    - ${{ each config in parameters.configs }}:
      - powershell: |
          Write-Host "config = ${{ config }}"
          Write-Host "preRelease = ${{ parameters.preRelease }}"
          Write-Host "correctBinaryVersion = ${{ parameters.correctBinaryVersion }}"
          Write-Host "currentVersion = ${{ parameters.currentVersion }}"
          Write-Host "releaseVersion = ${{ parameters.releaseVersion }}"
          Write-Host "githubBranch = ${{ parameters.githubBranch }}"
        displayName: check ${{ config }}